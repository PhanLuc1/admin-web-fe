{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"originDependencies\", \"children\", \"ignoreFormListField\"];\nimport { isDeepEqualReact, merge, ProFormContext } from '@ant-design/pro-utils';\nimport { Form } from 'antd';\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { useContext, useMemo } from 'react';\nimport { FormListContext } from \"../List\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProFormDependency = function ProFormDependency(_ref) {\n  var nameList = _ref.name,\n    _ref$originDependenci = _ref.originDependencies,\n    originDependencies = _ref$originDependenci === void 0 ? nameList : _ref$originDependenci,\n    _children = _ref.children,\n    ignoreFormListField = _ref.ignoreFormListField,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(ProFormContext);\n  // ProFromList 的 field，里面有name和key\n  var formListField = useContext(FormListContext);\n\n  // flatten each name into an (string | number)[]\n  var flattenNames = useMemo(function () {\n    return nameList.map(function (itemName) {\n      var _formListField$listNa;\n      var name = [itemName];\n\n      // ignoreFormListField为 true 或 formListField.name === undefined 时\n      // 应从全局取值，要将 names 中各项的路径前缀(formListField.listName)忽略\n      if (!ignoreFormListField && formListField.name !== undefined && (_formListField$listNa = formListField.listName) !== null && _formListField$listNa !== void 0 && _formListField$listNa.length) {\n        name.unshift(formListField.listName);\n      }\n      return name.flat(1);\n    });\n  }, [formListField.listName, formListField.name, ignoreFormListField, nameList === null || nameList === void 0 ? void 0 : nameList.toString()]);\n  return /*#__PURE__*/_jsx(Form.Item, _objectSpread(_objectSpread({}, rest), {}, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {\n      if (typeof rest.shouldUpdate === 'boolean') {\n        return rest.shouldUpdate;\n      } else if (typeof rest.shouldUpdate === 'function') {\n        var _rest$shouldUpdate;\n        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);\n      }\n      return flattenNames.some(function (name) {\n        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));\n      });\n    },\n    children: function children(form) {\n      var values = {};\n      for (var i = 0; i < nameList.length; i++) {\n        var _context$getFieldForm;\n        var itemName = flattenNames[i],\n          itemOriginName = originDependencies[i];\n        var finalName = [itemOriginName].flat(1);\n        var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, itemName);\n        if (value && Object.keys(value).length) {\n          // transform 会生成多余的value，这里需要注入一下\n          values = merge({}, values, value);\n          if (get(value, itemName)) {\n            values = set(values, finalName, get(value, itemName));\n          }\n        } else {\n          var _form$getFieldValue;\n          value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, itemName);\n          if (typeof value !== 'undefined') {\n            values = set(values, finalName, value);\n          }\n        }\n      }\n      return _children === null || _children === void 0 ? void 0 : _children(values, _objectSpread(_objectSpread({}, form), context));\n    }\n  }));\n};\nProFormDependency.displayName = 'ProFormDependency';\nexport default ProFormDependency;","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","isDeepEqualReact","merge","ProFormContext","Form","get","set","useContext","useMemo","FormListContext","jsx","_jsx","ProFormDependency","_ref","nameList","name","_ref$originDependenci","originDependencies","_children","children","ignoreFormListField","rest","context","formListField","flattenNames","map","itemName","_formListField$listNa","undefined","listName","length","unshift","flat","toString","Item","noStyle","shouldUpdate","prevValues","nextValues","info","_rest$shouldUpdate","call","some","form","values","i","_context$getFieldForm","itemOriginName","finalName","value","getFieldFormatValueObject","Object","keys","_form$getFieldValue","getFieldValue","displayName"],"sources":["/Users/phanluc/admin-web-fe/node_modules/@ant-design/pro-form/es/components/Dependency/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"originDependencies\", \"children\", \"ignoreFormListField\"];\nimport { isDeepEqualReact, merge, ProFormContext } from '@ant-design/pro-utils';\nimport { Form } from 'antd';\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { useContext, useMemo } from 'react';\nimport { FormListContext } from \"../List\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProFormDependency = function ProFormDependency(_ref) {\n  var nameList = _ref.name,\n    _ref$originDependenci = _ref.originDependencies,\n    originDependencies = _ref$originDependenci === void 0 ? nameList : _ref$originDependenci,\n    _children = _ref.children,\n    ignoreFormListField = _ref.ignoreFormListField,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(ProFormContext);\n  // ProFromList 的 field，里面有name和key\n  var formListField = useContext(FormListContext);\n\n  // flatten each name into an (string | number)[]\n  var flattenNames = useMemo(function () {\n    return nameList.map(function (itemName) {\n      var _formListField$listNa;\n      var name = [itemName];\n\n      // ignoreFormListField为 true 或 formListField.name === undefined 时\n      // 应从全局取值，要将 names 中各项的路径前缀(formListField.listName)忽略\n      if (!ignoreFormListField && formListField.name !== undefined && (_formListField$listNa = formListField.listName) !== null && _formListField$listNa !== void 0 && _formListField$listNa.length) {\n        name.unshift(formListField.listName);\n      }\n      return name.flat(1);\n    });\n  }, [formListField.listName, formListField.name, ignoreFormListField, nameList === null || nameList === void 0 ? void 0 : nameList.toString()]);\n  return /*#__PURE__*/_jsx(Form.Item, _objectSpread(_objectSpread({}, rest), {}, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {\n      if (typeof rest.shouldUpdate === 'boolean') {\n        return rest.shouldUpdate;\n      } else if (typeof rest.shouldUpdate === 'function') {\n        var _rest$shouldUpdate;\n        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);\n      }\n      return flattenNames.some(function (name) {\n        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));\n      });\n    },\n    children: function children(form) {\n      var values = {};\n      for (var i = 0; i < nameList.length; i++) {\n        var _context$getFieldForm;\n        var itemName = flattenNames[i],\n          itemOriginName = originDependencies[i];\n        var finalName = [itemOriginName].flat(1);\n        var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, itemName);\n        if (value && Object.keys(value).length) {\n          // transform 会生成多余的value，这里需要注入一下\n          values = merge({}, values, value);\n          if (get(value, itemName)) {\n            values = set(values, finalName, get(value, itemName));\n          }\n        } else {\n          var _form$getFieldValue;\n          value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, itemName);\n          if (typeof value !== 'undefined') {\n            values = set(values, finalName, value);\n          }\n        }\n      }\n      return _children === null || _children === void 0 ? void 0 : _children(values, _objectSpread(_objectSpread({}, form), context));\n    }\n  }));\n};\nProFormDependency.displayName = 'ProFormDependency';\nexport default ProFormDependency;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}