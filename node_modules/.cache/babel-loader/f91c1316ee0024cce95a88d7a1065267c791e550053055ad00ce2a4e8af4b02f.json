{"ast":null,"code":"var _jsxFileName = \"/Users/phanluc/admin-web-fe/src/pages/users/index.jsx\";\nimport React from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    valueType: \"text\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    valueType: \"text\"\n  }, {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    valueType: \"money\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n    valueType: \"digit\"\n  }];\n  return /*#__PURE__*/_jsxDEV(ProTable, {\n    columns: columns,\n    request: async params => {\n      try {\n        // Gửi yêu cầu API với tham số pagination từ ProTable\n        const response = await fetch(`http://localhost:8080/api/products?page=${params.current - 1}&size=${params.pageSize}`);\n\n        // Lấy dữ liệu từ header và body\n        const total = response.headers.get(\"X-Total-Count\");\n        const data = await response.json();\n        return {\n          data,\n          // Dữ liệu từ API\n          total: parseInt(total, 10),\n          // Tổng số bản ghi\n          success: true\n        };\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return {\n          data: [],\n          total: 0,\n          success: false\n        };\n      }\n    },\n    rowKey: \"id\" // Sử dụng `id` làm khóa duy nhất\n    ,\n    search: {\n      labelWidth: \"auto\" // Tự động căn chỉnh nhãn\n    },\n    pagination: {\n      pageSize: 20,\n      // Số bản ghi mỗi trang\n      showSizeChanger: true,\n      // Cho phép thay đổi số bản ghi mỗi trang\n      showQuickJumper: true // Cho phép nhảy tới trang bất kỳ\n    },\n    dateFormatter: \"string\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","ProTable","jsxDEV","_jsxDEV","Users","columns","title","dataIndex","key","valueType","request","params","response","fetch","current","pageSize","total","headers","get","data","json","parseInt","success","error","console","rowKey","search","labelWidth","pagination","showSizeChanger","showQuickJumper","dateFormatter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phanluc/admin-web-fe/src/pages/users/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\n\nconst Users = () => {\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\",\n            valueType: \"money\",\n        },\n        {\n            title: \"Amount\",\n            dataIndex: \"amount\",\n            key: \"amount\",\n            valueType: \"digit\",\n        },\n    ];\n\n    return (\n        <ProTable\n            columns={columns}\n            request={async (params) => {\n                try {\n                    // Gửi yêu cầu API với tham số pagination từ ProTable\n                    const response = await fetch(\n                        `http://localhost:8080/api/products?page=${\n                            params.current - 1\n                        }&size=${params.pageSize}`\n                    );\n\n                    // Lấy dữ liệu từ header và body\n                    const total = response.headers.get(\"X-Total-Count\");\n                    const data = await response.json();\n\n                    return {\n                        data, // Dữ liệu từ API\n                        total: parseInt(total, 10), // Tổng số bản ghi\n                        success: true,\n                    };\n                } catch (error) {\n                    console.error(\"Error fetching data:\", error);\n                    return {\n                        data: [],\n                        total: 0,\n                        success: false,\n                    };\n                }\n            }}\n            rowKey=\"id\" // Sử dụng `id` làm khóa duy nhất\n            search={{\n                labelWidth: \"auto\", // Tự động căn chỉnh nhãn\n            }}\n            pagination={{\n                pageSize: 20, // Số bản ghi mỗi trang\n                showSizeChanger: true, // Cho phép thay đổi số bản ghi mỗi trang\n                showQuickJumper: true, // Cho phép nhảy tới trang bất kỳ\n            }}\n            dateFormatter=\"string\"\n        />\n    );\n};\n\nexport default Users;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAG,CACZ;IACIC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,IAAI;IACfC,GAAG,EAAE,IAAI;IACTC,SAAS,EAAE;EACf,CAAC,EACD;IACIH,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE,MAAM;IACXC,SAAS,EAAE;EACf,CAAC,EACD;IACIH,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE,OAAO;IACZC,SAAS,EAAE;EACf,CAAC,EACD;IACIH,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,SAAS,EAAE;EACf,CAAC,CACJ;EAED,oBACIN,OAAA,CAACF,QAAQ;IACLI,OAAO,EAAEA,OAAQ;IACjBK,OAAO,EAAE,MAAOC,MAAM,IAAK;MACvB,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,2CACIF,MAAM,CAACG,OAAO,GAAG,CAAC,SACbH,MAAM,CAACI,QAAQ,EAC5B,CAAC;;QAED;QACA,MAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QACnD,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAElC,OAAO;UACHD,IAAI;UAAE;UACNH,KAAK,EAAEK,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC;UAAE;UAC5BM,OAAO,EAAE;QACb,CAAC;MACL,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAO;UACHJ,IAAI,EAAE,EAAE;UACRH,KAAK,EAAE,CAAC;UACRM,OAAO,EAAE;QACb,CAAC;MACL;IACJ,CAAE;IACFG,MAAM,EAAC,IAAI,CAAC;IAAA;IACZC,MAAM,EAAE;MACJC,UAAU,EAAE,MAAM,CAAE;IACxB,CAAE;IACFC,UAAU,EAAE;MACRb,QAAQ,EAAE,EAAE;MAAE;MACdc,eAAe,EAAE,IAAI;MAAE;MACvBC,eAAe,EAAE,IAAI,CAAE;IAC3B,CAAE;IACFC,aAAa,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACC,EAAA,GAtEIhC,KAAK;AAwEX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}