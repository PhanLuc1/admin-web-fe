{"ast":null,"code":"var _jsxFileName = \"/Users/phanluc/admin-web-fe/src/pages/users/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [pageSize, setPageSize] = useState(20);\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    valueType: \"text\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    valueType: \"text\" // Sử dụng trong form search\n  }, {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    valueType: \"money\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n    valueType: \"digit\" // Sử dụng trong form search\n  }];\n  const buildJHipsterFilters = params => {\n    const filters = {};\n\n    // Nếu có \"name\", thêm bộ lọc chứa \"contains\"\n    if (params.name) {\n      filters[\"name.contains\"] = params.name;\n    }\n\n    // Nếu có \"amount\", thêm bộ lọc equals\n    if (params.amount) {\n      filters[\"amount.equals\"] = params.amount;\n    }\n\n    // Thêm các bộ lọc khác nếu cần\n    return filters;\n  };\n  return /*#__PURE__*/_jsxDEV(ProTable, {\n    columns: columns,\n    request: async params => {\n      try {\n        // Xây dựng bộ lọc JHipster\n        const filters = buildJHipsterFilters(params);\n\n        // Gửi request với các tham số\n        const response = await axios.get(\"http://localhost:8080/api/products\", {\n          params: {\n            page: params.current - 1,\n            size: params.pageSize,\n            ...filters // Thêm bộ lọc vào query params\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer <your-token>\"\n          }\n        });\n        return {\n          data: response.data,\n          total: parseInt(response.headers[\"x-total-count\"], 10),\n          success: true\n        };\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return {\n          data: [],\n          total: 0,\n          success: false\n        };\n      }\n    },\n    rowKey: \"id\",\n    pagination: {\n      pageSize: pageSize,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      onShowSizeChange: (_, size) => {\n        setPageSize(size);\n      }\n    },\n    search: {\n      labelWidth: \"auto\"\n    },\n    dateFormatter: \"string\",\n    headerTitle: \"Product List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"zbA9tgrECZ6shRFh+hu29rQ13A8=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","ProTable","axios","jsxDEV","_jsxDEV","Users","_s","pageSize","setPageSize","columns","title","dataIndex","key","valueType","buildJHipsterFilters","params","filters","name","amount","request","response","get","page","current","size","headers","Authorization","data","total","parseInt","success","error","console","rowKey","pagination","showSizeChanger","showQuickJumper","onShowSizeChange","_","search","labelWidth","dateFormatter","headerTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phanluc/admin-web-fe/src/pages/users/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport axios from \"axios\";\n\nconst Users = () => {\n    const [pageSize, setPageSize] = useState(20);\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n            valueType: \"text\", // Sử dụng trong form search\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\",\n            valueType: \"money\",\n        },\n        {\n            title: \"Amount\",\n            dataIndex: \"amount\",\n            key: \"amount\",\n            valueType: \"digit\", // Sử dụng trong form search\n        },\n    ];\n\n    const buildJHipsterFilters = (params) => {\n        const filters = {};\n\n        // Nếu có \"name\", thêm bộ lọc chứa \"contains\"\n        if (params.name) {\n            filters[\"name.contains\"] = params.name;\n        }\n\n        // Nếu có \"amount\", thêm bộ lọc equals\n        if (params.amount) {\n            filters[\"amount.equals\"] = params.amount;\n        }\n\n        // Thêm các bộ lọc khác nếu cần\n        return filters;\n    };\n\n    return (\n        <ProTable\n            columns={columns}\n            request={async (params) => {\n                try {\n                    // Xây dựng bộ lọc JHipster\n                    const filters = buildJHipsterFilters(params);\n\n                    // Gửi request với các tham số\n                    const response = await axios.get(\"http://localhost:8080/api/products\", {\n                        params: {\n                            page: params.current - 1,\n                            size: params.pageSize,\n                            ...filters, // Thêm bộ lọc vào query params\n                        },\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: \"Bearer <your-token>\",\n                        },\n                    });\n\n                    return {\n                        data: response.data,\n                        total: parseInt(response.headers[\"x-total-count\"], 10),\n                        success: true,\n                    };\n                } catch (error) {\n                    console.error(\"Error fetching data:\", error);\n                    return {\n                        data: [],\n                        total: 0,\n                        success: false,\n                    };\n                }\n            }}\n            rowKey=\"id\"\n            pagination={{\n                pageSize: pageSize,\n                showSizeChanger: true,\n                showQuickJumper: true,\n                onShowSizeChange: (_, size) => {\n                    setPageSize(size);\n                },\n            }}\n            search={{\n                labelWidth: \"auto\",\n            }}\n            dateFormatter=\"string\"\n            headerTitle=\"Product List\"\n        />\n    );\n};\n\nexport default Users;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}