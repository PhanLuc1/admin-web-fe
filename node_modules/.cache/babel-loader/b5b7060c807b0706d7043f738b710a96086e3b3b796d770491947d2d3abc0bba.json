{"ast":null,"code":"var _jsxFileName = \"/Users/phanluc/admin-web-fe/src/pages/users/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [paginationLinks, setPaginationLinks] = useState({}); // Lưu các link pagination\n\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    valueType: \"text\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    valueType: \"text\"\n  }, {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    valueType: \"money\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n    valueType: \"digit\"\n  }];\n  return /*#__PURE__*/_jsxDEV(ProTable, {\n    columns: columns,\n    request: async params => {\n      try {\n        // Gửi request tới API\n        const response = await axios.get(\"http://localhost:8080/api/products\", {\n          params: {\n            page: params.current - 1,\n            size: params.pageSize\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer <your-token-here>\"\n          }\n        });\n\n        // Parse các link pagination\n        const links = parsePaginationLinks(response.headers.link);\n        setPaginationLinks(links); // Lưu các link vào state\n\n        return {\n          data: response.data,\n          // Dữ liệu\n          total: parseInt(response.headers[\"x-total-count\"], 10),\n          // Tổng số bản ghi\n          success: true // Đánh dấu thành công\n        };\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return {\n          data: [],\n          total: 0,\n          success: false\n        };\n      }\n    },\n    rowKey: \"id\" // Khóa duy nhất\n    ,\n    pagination: {\n      pageSize: 20,\n      onChange: async (page, pageSize) => {\n        // Nếu có link 'next' trong header\n        if (paginationLinks.next) {\n          const response = await axios.get(paginationLinks.next, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer <your-token-here>\"\n            }\n          });\n\n          // Parse lại các link pagination\n          const links = parsePaginationLinks(response.headers.link);\n          setPaginationLinks(links); // Cập nhật links\n        }\n      }\n    },\n    search: {\n      labelWidth: \"auto\"\n    },\n    dateFormatter: \"string\",\n    headerTitle: \"Product List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"EDK1orPQPpz6jf8Q1W4YdQ1/6Bs=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","ProTable","axios","jsxDEV","_jsxDEV","Users","_s","paginationLinks","setPaginationLinks","columns","title","dataIndex","key","valueType","request","params","response","get","page","current","size","pageSize","headers","Authorization","links","parsePaginationLinks","link","data","total","parseInt","success","error","console","rowKey","pagination","onChange","next","search","labelWidth","dateFormatter","headerTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phanluc/admin-web-fe/src/pages/users/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport axios from \"axios\";\n\nconst Users = () => {\n    const [paginationLinks, setPaginationLinks] = useState({}); // Lưu các link pagination\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\",\n            valueType: \"money\",\n        },\n        {\n            title: \"Amount\",\n            dataIndex: \"amount\",\n            key: \"amount\",\n            valueType: \"digit\",\n        },\n    ];\n\n    return (\n        <ProTable\n            columns={columns}\n            request={async (params) => {\n                try {\n                    // Gửi request tới API\n                    const response = await axios.get(\"http://localhost:8080/api/products\", {\n                        params: { page: params.current - 1, size: params.pageSize },\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: \"Bearer <your-token-here>\",\n                        },\n                    });\n\n                    // Parse các link pagination\n                    const links = parsePaginationLinks(response.headers.link);\n                    setPaginationLinks(links); // Lưu các link vào state\n\n                    return {\n                        data: response.data, // Dữ liệu\n                        total: parseInt(response.headers[\"x-total-count\"], 10), // Tổng số bản ghi\n                        success: true, // Đánh dấu thành công\n                    };\n                } catch (error) {\n                    console.error(\"Error fetching data:\", error);\n                    return {\n                        data: [],\n                        total: 0,\n                        success: false,\n                    };\n                }\n            }}\n            rowKey=\"id\" // Khóa duy nhất\n            pagination={{\n                pageSize: 20,\n                onChange: async (page, pageSize) => {\n                    // Nếu có link 'next' trong header\n                    if (paginationLinks.next) {\n                        const response = await axios.get(paginationLinks.next, {\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: \"Bearer <your-token-here>\",\n                            },\n                        });\n\n                        // Parse lại các link pagination\n                        const links = parsePaginationLinks(response.headers.link);\n                        setPaginationLinks(links); // Cập nhật links\n                    }\n                },\n            }}\n            search={{\n                labelWidth: \"auto\",\n            }}\n            dateFormatter=\"string\"\n            headerTitle=\"Product List\"\n        />\n    );\n};\n\nexport default Users;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}