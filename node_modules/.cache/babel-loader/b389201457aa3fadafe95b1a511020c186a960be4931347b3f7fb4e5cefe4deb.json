{"ast":null,"code":"var _jsxFileName = \"/Users/phanluc/admin-web-fe/src/pages/users/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport axios from \"axios\";\nimport parsePaginationLinks from \"../../utils/paginationUtils\"; // Import hàm mặc định\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [paginationLinks, setPaginationLinks] = useState({}); // Lưu các link pagination\n\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    valueType: \"text\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    valueType: \"text\"\n  }, {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    valueType: \"money\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n    valueType: \"digit\"\n  }];\n  return /*#__PURE__*/_jsxDEV(ProTable, {\n    columns: columns,\n    request: async params => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/products\", {\n          params: {\n            page: params.current - 1,\n            size: params.pageSize\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTczMzkxMDkwMywiYXV0aCI6IlJPTEVfQURNSU4gUk9MRV9VU0VSIiwiaWF0IjoxNzMzODI0NTAzfQ.1RXQD4j5UI33MyfsEIICh9HI3XhKZi93YoQrgBltY0ylPGSXcBuMJ33CgajPa7VL6kyoUtknoQnAhZZ0MU6DKA\"\n          }\n        });\n\n        // Parse Link Header để lấy các link pagination\n        const links = parsePaginationLinks(response.headers.link);\n        setPaginationLinks(links); // Lưu các link vào state\n\n        return {\n          data: response.data,\n          // Dữ liệu từ API\n          total: parseInt(response.headers[\"x-total-count\"], 10),\n          // Tổng số bản ghi\n          success: true // Đánh dấu thành công\n        };\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return {\n          data: [],\n          total: 0,\n          success: false\n        };\n      }\n    },\n    rowKey: \"id\" // Khóa duy nhất\n    ,\n    pagination: {\n      pageSize: 30,\n      showSizeChanger: true,\n      showQuickJumper: true\n    },\n    search: {\n      labelWidth: \"auto\"\n    },\n    dateFormatter: \"string\",\n    headerTitle: \"Product List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"EDK1orPQPpz6jf8Q1W4YdQ1/6Bs=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","ProTable","axios","parsePaginationLinks","jsxDEV","_jsxDEV","Users","_s","paginationLinks","setPaginationLinks","columns","title","dataIndex","key","valueType","request","params","response","get","page","current","size","pageSize","headers","Authorization","links","link","data","total","parseInt","success","error","console","rowKey","pagination","showSizeChanger","showQuickJumper","search","labelWidth","dateFormatter","headerTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phanluc/admin-web-fe/src/pages/users/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ProTable } from \"@ant-design/pro-table\";\nimport axios from \"axios\";\nimport parsePaginationLinks from \"../../utils/paginationUtils\"; // Import hàm mặc định\n\nconst Users = () => {\n    const [paginationLinks, setPaginationLinks] = useState({}); // Lưu các link pagination\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n            valueType: \"text\",\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            key: \"price\",\n            valueType: \"money\",\n        },\n        {\n            title: \"Amount\",\n            dataIndex: \"amount\",\n            key: \"amount\",\n            valueType: \"digit\",\n        },\n    ];\n\n    return (\n        <ProTable\n            columns={columns}\n            request={async (params) => {\n                try {\n                    const response = await axios.get(\"http://localhost:8080/api/products\", {\n                        params: { page: params.current - 1, size: params.pageSize },\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTczMzkxMDkwMywiYXV0aCI6IlJPTEVfQURNSU4gUk9MRV9VU0VSIiwiaWF0IjoxNzMzODI0NTAzfQ.1RXQD4j5UI33MyfsEIICh9HI3XhKZi93YoQrgBltY0ylPGSXcBuMJ33CgajPa7VL6kyoUtknoQnAhZZ0MU6DKA\",\n                        },\n                    });\n\n                    // Parse Link Header để lấy các link pagination\n                    const links = parsePaginationLinks(response.headers.link);\n                    setPaginationLinks(links); // Lưu các link vào state\n\n                    return {\n                        data: response.data, // Dữ liệu từ API\n                        total: parseInt(response.headers[\"x-total-count\"], 10), // Tổng số bản ghi\n                        success: true, // Đánh dấu thành công\n                    };\n                } catch (error) {\n                    console.error(\"Error fetching data:\", error);\n                    return {\n                        data: [],\n                        total: 0,\n                        success: false,\n                    };\n                }\n            }}\n            rowKey=\"id\" // Khóa duy nhất\n            pagination={{\n                pageSize: 30,\n                showSizeChanger: true,\n                showQuickJumper: true,\n            }}\n            search={{\n                labelWidth: \"auto\",\n            }}\n            dateFormatter=\"string\"\n            headerTitle=\"Product List\"\n        />\n    );\n};\n\nexport default Users;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5D,MAAMU,OAAO,GAAG,CACZ;IACIC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,IAAI;IACfC,GAAG,EAAE,IAAI;IACTC,SAAS,EAAE;EACf,CAAC,EACD;IACIH,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE,MAAM;IACXC,SAAS,EAAE;EACf,CAAC,EACD;IACIH,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE,OAAO;IACZC,SAAS,EAAE;EACf,CAAC,EACD;IACIH,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,SAAS,EAAE;EACf,CAAC,CACJ;EAED,oBACIT,OAAA,CAACJ,QAAQ;IACLS,OAAO,EAAEA,OAAQ;IACjBK,OAAO,EAAE,MAAOC,MAAM,IAAK;MACvB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,oCAAoC,EAAE;UACnEF,MAAM,EAAE;YAAEG,IAAI,EAAEH,MAAM,CAACI,OAAO,GAAG,CAAC;YAAEC,IAAI,EAAEL,MAAM,CAACM;UAAS,CAAC;UAC3DC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE;UACnB;QACJ,CAAC,CAAC;;QAEF;QACA,MAAMC,KAAK,GAAGtB,oBAAoB,CAACc,QAAQ,CAACM,OAAO,CAACG,IAAI,CAAC;QACzDjB,kBAAkB,CAACgB,KAAK,CAAC,CAAC,CAAC;;QAE3B,OAAO;UACHE,IAAI,EAAEV,QAAQ,CAACU,IAAI;UAAE;UACrBC,KAAK,EAAEC,QAAQ,CAACZ,QAAQ,CAACM,OAAO,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;UAAE;UACxDO,OAAO,EAAE,IAAI,CAAE;QACnB,CAAC;MACL,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAO;UACHJ,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,CAAC;UACRE,OAAO,EAAE;QACb,CAAC;MACL;IACJ,CAAE;IACFG,MAAM,EAAC,IAAI,CAAC;IAAA;IACZC,UAAU,EAAE;MACRZ,QAAQ,EAAE,EAAE;MACZa,eAAe,EAAE,IAAI;MACrBC,eAAe,EAAE;IACrB,CAAE;IACFC,MAAM,EAAE;MACJC,UAAU,EAAE;IAChB,CAAE;IACFC,aAAa,EAAC,QAAQ;IACtBC,WAAW,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACrC,EAAA,CA1EID,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AA4EX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}