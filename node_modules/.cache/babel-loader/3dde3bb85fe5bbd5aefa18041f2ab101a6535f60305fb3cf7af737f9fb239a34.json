{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"children\"];\nimport { Form } from 'antd';\nimport React from 'react';\nimport ProFormItem from \"../FormItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getControlConfigProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var valuePropName = props.valuePropName || 'value';\n  var trigger = props.trigger || 'onChange';\n  var name = props.name;\n  return {\n    valuePropName: valuePropName,\n    trigger: trigger,\n    name: name\n  };\n}\nexport function useControlModel(_ref, model) {\n  var value = _ref.value,\n    onChange = _ref.onChange;\n  if (!Array.isArray(model)) {\n    var p = getControlConfigProps(model);\n    return _defineProperty(_defineProperty({}, p.valuePropName, value), p.trigger, function (e) {\n      onChange === null || onChange === void 0 || onChange(e !== null && e !== void 0 && e.target ? e.target[p.valuePropName] : e);\n    });\n  }\n  return model.reduce(function (acc, k) {\n    var p = getControlConfigProps(k);\n    var name = p.name || k;\n    acc[name] = _defineProperty(_defineProperty({}, p.valuePropName, value === null || value === void 0 ? void 0 : value[name]), p.trigger, function (v) {\n      onChange === null || onChange === void 0 || onChange(_objectSpread(_objectSpread({}, value), {}, _defineProperty({}, name, v !== null && v !== void 0 && v.target ? v.target[p.valuePropName] : v)));\n    });\n    return acc;\n  }, {});\n}\n/**\n * 用在 ProForm.Item 或 Form.Item 于 表单项之间的，用于劫持渲染的函数\n * ``` tsx\n * <Form.Item name='name' label='名称'>\n *   <FormControlRender>\n *   {\n *     formItemProps => (\n *       <div>\n *         <span>prefix</span>\n *         <Input {...formItemProps} />\n *       </div>\n *     )\n *   }\n *   </FormControlRender>\n * </Form.Item>\n * ```\n */\nexport function FormControlRender(props) {\n  var children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _Form$Item$useStatus = Form.Item.useStatus(),\n    status = _Form$Item$useStatus.status,\n    errors = _Form$Item$useStatus.errors,\n    warnings = _Form$Item$useStatus.warnings;\n  return children(_objectSpread({\n    status: status,\n    errors: errors,\n    warnings: warnings\n  }, restProps));\n}\n\n/**\n * 提取props中的 value 和 onChange 属性\n */\nexport function pickControlProps(props) {\n  return {\n    value: props.value,\n    onChange: function onChange(value) {\n      return props.onChange(value !== null && value !== void 0 && value.target ? value.target.value : value);\n    }\n  };\n}\n\n/**\n * 提取props中的 value、onChange 和 id 属性\n */\nexport function pickControlPropsWithId(props) {\n  return _objectSpread(_objectSpread({}, pickControlProps(props)), {}, {\n    id: props.id\n  });\n}\n\n/**\n * 用于包裹ProForm.Item Form.Item，使其可以使用render props的形式\n * @description 用法\n * const FormItem = withFormItemRender(用于包裹ProForm.Item)\n * ``` tsx\n * <FormItem name='name' label='名称'>\n *   {\n *     formItemProps => (\n *       <div>\n *         <span>prefix</span>\n *         <Input {...formItemProps} />\n *       </div>\n *     )\n *   }\n * </FormItem>\n * ```\n */\nexport function withFormItemRender(Comp) {\n  return function (props) {\n    var children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded2);\n    return /*#__PURE__*/_jsx(Comp, _objectSpread(_objectSpread({}, restProps), {}, {\n      children: /*#__PURE__*/_jsx(FormControlRender, {\n        children: children\n      })\n    }));\n  };\n}\n\n/**\n * 用 withFormItemRender 加工Form.Item，使其拥有render props能力，同时暴露出 status 属性方便自定义组件校验使用\n *\n * ``` tsx\n *   <FormItemRender name='name' label='名称'>\n *   {\n *     formItemProps => (\n *       <div>\n *         <h3>prefix</h3>\n *         <textarea {...formItemProps} style={{ borderColor: formItemProps.status === 'error' ? 'red' : undefined }} />\n *       </div>\n *     )\n *   }\n *   </FormItemRender>\n * ```\n */\nexport var FormItemRender = withFormItemRender(Form.Item);\n\n/**\n * 用 withFormItemRender 加工 ProForm.Item，使其拥有render props能力，同时暴露出 status 属性方便自定义组件校验使用\n * ``` tsx\n *   <ProFormItemRender name='name' label='名称'>\n *   {\n *     formItemProps => (\n *       <div>\n *         <h3>prefix</h3>\n *         <textarea {...formItemProps} style={{ borderColor: formItemProps.status === 'error' ? 'red' : undefined }} />\n *       </div>\n *     )\n *   }\n *   </ProFormItemRender>\n * ```\n */\nexport var ProFormItemRender = withFormItemRender(ProFormItem);","map":{"version":3,"names":["_objectWithoutProperties","_objectSpread","_defineProperty","_excluded","_excluded2","Form","React","ProFormItem","jsx","_jsx","getControlConfigProps","props","arguments","length","undefined","valuePropName","trigger","name","useControlModel","_ref","model","value","onChange","Array","isArray","p","e","target","reduce","acc","k","v","FormControlRender","children","restProps","_Form$Item$useStatus","Item","useStatus","status","errors","warnings","pickControlProps","pickControlPropsWithId","id","withFormItemRender","Comp","FormItemRender","ProFormItemRender"],"sources":["/Users/phanluc/admin-web-fe/node_modules/@ant-design/pro-form/es/components/FormItemRender/index.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"children\"];\nimport { Form } from 'antd';\nimport React from 'react';\nimport ProFormItem from \"../FormItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getControlConfigProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var valuePropName = props.valuePropName || 'value';\n  var trigger = props.trigger || 'onChange';\n  var name = props.name;\n  return {\n    valuePropName: valuePropName,\n    trigger: trigger,\n    name: name\n  };\n}\nexport function useControlModel(_ref, model) {\n  var value = _ref.value,\n    onChange = _ref.onChange;\n  if (!Array.isArray(model)) {\n    var p = getControlConfigProps(model);\n    return _defineProperty(_defineProperty({}, p.valuePropName, value), p.trigger, function (e) {\n      onChange === null || onChange === void 0 || onChange(e !== null && e !== void 0 && e.target ? e.target[p.valuePropName] : e);\n    });\n  }\n  return model.reduce(function (acc, k) {\n    var p = getControlConfigProps(k);\n    var name = p.name || k;\n    acc[name] = _defineProperty(_defineProperty({}, p.valuePropName, value === null || value === void 0 ? void 0 : value[name]), p.trigger, function (v) {\n      onChange === null || onChange === void 0 || onChange(_objectSpread(_objectSpread({}, value), {}, _defineProperty({}, name, v !== null && v !== void 0 && v.target ? v.target[p.valuePropName] : v)));\n    });\n    return acc;\n  }, {});\n}\n/**\n * 用在 ProForm.Item 或 Form.Item 于 表单项之间的，用于劫持渲染的函数\n * ``` tsx\n * <Form.Item name='name' label='名称'>\n *   <FormControlRender>\n *   {\n *     formItemProps => (\n *       <div>\n *         <span>prefix</span>\n *         <Input {...formItemProps} />\n *       </div>\n *     )\n *   }\n *   </FormControlRender>\n * </Form.Item>\n * ```\n */\nexport function FormControlRender(props) {\n  var children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _Form$Item$useStatus = Form.Item.useStatus(),\n    status = _Form$Item$useStatus.status,\n    errors = _Form$Item$useStatus.errors,\n    warnings = _Form$Item$useStatus.warnings;\n  return children(_objectSpread({\n    status: status,\n    errors: errors,\n    warnings: warnings\n  }, restProps));\n}\n\n/**\n * 提取props中的 value 和 onChange 属性\n */\nexport function pickControlProps(props) {\n  return {\n    value: props.value,\n    onChange: function onChange(value) {\n      return props.onChange(value !== null && value !== void 0 && value.target ? value.target.value : value);\n    }\n  };\n}\n\n/**\n * 提取props中的 value、onChange 和 id 属性\n */\nexport function pickControlPropsWithId(props) {\n  return _objectSpread(_objectSpread({}, pickControlProps(props)), {}, {\n    id: props.id\n  });\n}\n\n/**\n * 用于包裹ProForm.Item Form.Item，使其可以使用render props的形式\n * @description 用法\n * const FormItem = withFormItemRender(用于包裹ProForm.Item)\n * ``` tsx\n * <FormItem name='name' label='名称'>\n *   {\n *     formItemProps => (\n *       <div>\n *         <span>prefix</span>\n *         <Input {...formItemProps} />\n *       </div>\n *     )\n *   }\n * </FormItem>\n * ```\n */\nexport function withFormItemRender(Comp) {\n  return function (props) {\n    var children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded2);\n    return /*#__PURE__*/_jsx(Comp, _objectSpread(_objectSpread({}, restProps), {}, {\n      children: /*#__PURE__*/_jsx(FormControlRender, {\n        children: children\n      })\n    }));\n  };\n}\n\n/**\n * 用 withFormItemRender 加工Form.Item，使其拥有render props能力，同时暴露出 status 属性方便自定义组件校验使用\n *\n * ``` tsx\n *   <FormItemRender name='name' label='名称'>\n *   {\n *     formItemProps => (\n *       <div>\n *         <h3>prefix</h3>\n *         <textarea {...formItemProps} style={{ borderColor: formItemProps.status === 'error' ? 'red' : undefined }} />\n *       </div>\n *     )\n *   }\n *   </FormItemRender>\n * ```\n */\nexport var FormItemRender = withFormItemRender(Form.Item);\n\n/**\n * 用 withFormItemRender 加工 ProForm.Item，使其拥有render props能力，同时暴露出 status 属性方便自定义组件校验使用\n * ``` tsx\n *   <ProFormItemRender name='name' label='名称'>\n *   {\n *     formItemProps => (\n *       <div>\n *         <h3>prefix</h3>\n *         <textarea {...formItemProps} style={{ borderColor: formItemProps.status === 'error' ? 'red' : undefined }} />\n *       </div>\n *     )\n *   }\n *   </ProFormItemRender>\n * ```\n */\nexport var ProFormItemRender = withFormItemRender(ProFormItem);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}