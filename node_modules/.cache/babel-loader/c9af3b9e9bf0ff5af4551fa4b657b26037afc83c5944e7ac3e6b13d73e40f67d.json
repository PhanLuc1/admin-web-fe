{"ast":null,"code":"import React from 'react';\nimport { useDeepCompareMemoize } from \"../useDeepCompareEffect\";\n\n/**\n * `useDeepCompareMemo` will only recompute the memoized value when one of the\n * `deps` has changed.\n *\n * Usage note: only use this if `deps` are objects or arrays that contain\n * objects. Otherwise you should just use React.useMemo.\n *\n */\nfunction useDeepCompareMemo(factory, dependencies) {\n  return React.useMemo(factory, useDeepCompareMemoize(dependencies));\n}\nexport default useDeepCompareMemo;","map":{"version":3,"names":["React","useDeepCompareMemoize","useDeepCompareMemo","factory","dependencies","useMemo"],"sources":["/Users/phanluc/admin-web-fe/node_modules/@ant-design/pro-utils/es/hooks/useDeepCompareMemo/index.js"],"sourcesContent":["import React from 'react';\nimport { useDeepCompareMemoize } from \"../useDeepCompareEffect\";\n\n/**\n * `useDeepCompareMemo` will only recompute the memoized value when one of the\n * `deps` has changed.\n *\n * Usage note: only use this if `deps` are objects or arrays that contain\n * objects. Otherwise you should just use React.useMemo.\n *\n */\nfunction useDeepCompareMemo(factory, dependencies) {\n  return React.useMemo(factory, useDeepCompareMemoize(dependencies));\n}\nexport default useDeepCompareMemo;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,yBAAyB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,OAAO,EAAEC,YAAY,EAAE;EACjD,OAAOJ,KAAK,CAACK,OAAO,CAACF,OAAO,EAAEF,qBAAqB,CAACG,YAAY,CAAC,CAAC;AACpE;AACA,eAAeF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}