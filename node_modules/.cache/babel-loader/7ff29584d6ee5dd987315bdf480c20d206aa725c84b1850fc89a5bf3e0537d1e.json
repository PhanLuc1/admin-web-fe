{"ast":null,"code":"import axios from 'axios';\nconst apiService = (() => {\n  const API_BASE_URL = 'https://your-api-domain.com/api';\n  const TOKEN_KEY = 'authToken';\n  const axiosInstance = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 10000,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  axiosInstance.interceptors.request.use(config => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => Promise.reject(error));\n  axiosInstance.interceptors.response.use(response => response.data, error => {\n    if (error.response) {\n      if (error.response.status === 401) {\n        console.error('Unauthorized access - perhaps you need to log in again.');\n      }\n      if (error.response.status === 403) {\n        console.error('Forbidden - you do not have permission to access this resource.');\n      }\n    }\n    return Promise.reject(error);\n  });\n  const setToken = token => {\n    localStorage.setItem(TOKEN_KEY, token);\n  };\n  const clearToken = () => {\n    localStorage.removeItem(TOKEN_KEY);\n  };\n  const get = (url, params = {}) => axiosInstance.get(url, {\n    params\n  });\n  const post = (url, data = {}) => axiosInstance.post(url, data);\n  const put = (url, data = {}) => axiosInstance.put(url, data);\n  const del = (url, params = {}) => axiosInstance.delete(url, {\n    params\n  });\n  return {\n    get,\n    post,\n    put,\n    delete: del,\n    setToken,\n    clearToken\n  };\n})();\nexport default apiService;","map":{"version":3,"names":["axios","apiService","API_BASE_URL","TOKEN_KEY","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","status","console","setToken","setItem","clearToken","removeItem","get","url","params","post","put","del","delete"],"sources":["/Users/phanluc/admin-web-fe/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiService = (() => {\n    const API_BASE_URL = 'https://your-api-domain.com/api';\n\n    const TOKEN_KEY = 'authToken';\n\n    const axiosInstance = axios.create({\n        baseURL: API_BASE_URL,\n        timeout: 10000,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n\n    axiosInstance.interceptors.request.use(\n        (config) => {\n            const token = localStorage.getItem(TOKEN_KEY);\n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n            return config;\n        },\n        (error) => Promise.reject(error)\n    );\n\n    axiosInstance.interceptors.response.use(\n        (response) => response.data,\n        (error) => {\n            if (error.response) {\n                if (error.response.status === 401) {\n                    console.error('Unauthorized access - perhaps you need to log in again.');\n                }\n                if (error.response.status === 403) {\n                    console.error('Forbidden - you do not have permission to access this resource.');\n                }\n            }\n            return Promise.reject(error);\n        }\n    );\n\n    const setToken = (token) => {\n        localStorage.setItem(TOKEN_KEY, token);\n    };\n\n    const clearToken = () => {\n        localStorage.removeItem(TOKEN_KEY);\n    };\n\n    const get = (url, params = {}) => axiosInstance.get(url, { params });\n    const post = (url, data = {}) => axiosInstance.post(url, data);\n    const put = (url, data = {}) => axiosInstance.put(url, data);\n    const del = (url, params = {}) => axiosInstance.delete(url, { params });\n\n    return {\n        get,\n        post,\n        put,\n        delete: del,\n        setToken,\n        clearToken,\n    };\n})();\n\nexport default apiService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,CAAC,MAAM;EACtB,MAAMC,YAAY,GAAG,iCAAiC;EAEtD,MAAMC,SAAS,GAAG,WAAW;EAE7B,MAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAAC;IAC/BC,OAAO,EAAEJ,YAAY;IACrBK,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;IACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACZ,SAAS,CAAC;IAC7C,IAAIU,KAAK,EAAE;MACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;IACpD;IACA,OAAOD,MAAM;EACjB,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;EAEDb,aAAa,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAClCS,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAC1BJ,KAAK,IAAK;IACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;MAChB,IAAIH,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC/BC,OAAO,CAACN,KAAK,CAAC,yDAAyD,CAAC;MAC5E;MACA,IAAIA,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC/BC,OAAO,CAACN,KAAK,CAAC,iEAAiE,CAAC;MACpF;IACJ;IACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC,CACJ,CAAC;EAED,MAAMO,QAAQ,GAAIX,KAAK,IAAK;IACxBC,YAAY,CAACW,OAAO,CAACtB,SAAS,EAAEU,KAAK,CAAC;EAC1C,CAAC;EAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACrBZ,YAAY,CAACa,UAAU,CAACxB,SAAS,CAAC;EACtC,CAAC;EAED,MAAMyB,GAAG,GAAGA,CAACC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK1B,aAAa,CAACwB,GAAG,CAACC,GAAG,EAAE;IAAEC;EAAO,CAAC,CAAC;EACpE,MAAMC,IAAI,GAAGA,CAACF,GAAG,EAAER,IAAI,GAAG,CAAC,CAAC,KAAKjB,aAAa,CAAC2B,IAAI,CAACF,GAAG,EAAER,IAAI,CAAC;EAC9D,MAAMW,GAAG,GAAGA,CAACH,GAAG,EAAER,IAAI,GAAG,CAAC,CAAC,KAAKjB,aAAa,CAAC4B,GAAG,CAACH,GAAG,EAAER,IAAI,CAAC;EAC5D,MAAMY,GAAG,GAAGA,CAACJ,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK1B,aAAa,CAAC8B,MAAM,CAACL,GAAG,EAAE;IAAEC;EAAO,CAAC,CAAC;EAEvE,OAAO;IACHF,GAAG;IACHG,IAAI;IACJC,GAAG;IACHE,MAAM,EAAED,GAAG;IACXT,QAAQ;IACRE;EACJ,CAAC;AACL,CAAC,EAAE,CAAC;AAEJ,eAAezB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}